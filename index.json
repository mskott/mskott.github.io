[{"content":"","date":null,"permalink":"/tags/bootc/","section":"Tags","summary":"","title":"Bootc"},{"content":"Lately I have been having a lot of fun experimenting with bootable containers using the bootc project. I have also been fiddling around with signing container images which led me to the obvious question: Does bootc support signed images?\nWe first need to create a key-pair we can use to sign the image. In this case I\u0026rsquo;m using Skopeo, but Cosign can also be used.\n# skopeo generate-sigstore-key --output-prefix bootc-demo Then we can go on to creating a container image, in this instance I\u0026rsquo;m using RHEL 9.5 as the base, but it doesn\u0026rsquo;t really matter.\nFROM registry.redhat.io/rhel9/rhel-bootc:latest COPY quay.io.yaml /etc/containers/registries.d COPY bootc-demo.pub /usr/local/etc COPY policy.json /etc/containers The three files being copied are what is needed to verify the signature of a image when downloading it. quay.io.yaml tells Podman to download signatures when pulling an image and policy.json defines that images pulled from my repository on quay.io must be verified using the public key created earlier.\nNow we are ready to build our container, sign it using our private key, and upload it to the repository.\n# podman build -t quay.io/rh-ee-mskoett/bootc-signed:latest . # podman push --sign-by-sigstore-private-key ./bootc-demo.private quay.io/rh-ee-mskoett/bootc-signed:latest With the image pushed to a repository we can now boot a VM with it using podman-bootc.\n$ podman-bootc run --filesystem=xfs quay.io/rh-ee-mskoett/bootc-signed:latest Booting `Red Hat Enterprise Linux 9.20241216.0.5 (Plow) (ostree:0)\u0026#39; Connecting to vm aefbbc0576844bdf41da77e296c5b20fbc049b45821b715f7791425e8d296c9b. To close connection, use `~.` or `exit` root@localhost ~]# bootc status No staged image present Current booted image: quay.io/rh-ee-mskoett/bootc-signed:latest Image version: 9.20241216.0 (2024-12-16 15:40:10.955783592 UTC) Image digest: sha256:cf59749ea0ecf31a6c5f482f76fd59a78f49a5a4bb8095db04a9eeeab15e6b64 No rollback image present Let\u0026rsquo;s rebuild our container image, but this time we wont be signing it when pushing it to the repository.\n# podman build -t quay.io/rh-ee-mskoett/bootc-signed:latest . # podman push quay.io/rh-ee-mskoett/bootc-signed:latest Now let\u0026rsquo;s see what happens if we try to upgrade our running VM to the updated image:\n[root@localhost ~]# bootc upgrade ERROR Upgrading: Pulling: Creating importer: failed to invoke method OpenImage: failed to invoke method OpenImage: A signature was required, but no signature exists As we can see, bootc didn\u0026rsquo;t allow the VM to be upgraded to the unsigned image. Being able to verify that OS updates come from a trusted source is a key requirement in modern computing. Bootable containers are still a relatively new thing, so already having verifiable updates is testament to the benefits of building it on top of container technology.\nThe files used in this experiment can be found in this Git repository.\n","date":"16 December 2024","permalink":"/posts/2024/bootc-signed-images/","section":"Posts","summary":"Lately I have been having a lot of fun experimenting with bootable containers using the bootc project.","title":"Bootc Signed Images"},{"content":"","date":null,"permalink":"/tags/containers/","section":"Tags","summary":"","title":"Containers"},{"content":"","date":null,"permalink":"/","section":"Martin Skøtt","summary":"","title":"Martin Skøtt"},{"content":"","date":null,"permalink":"/tags/podman/","section":"Tags","summary":"","title":"Podman"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/tags/fedora/","section":"Tags","summary":"","title":"Fedora"},{"content":"","date":null,"permalink":"/tags/openzfs/","section":"Tags","summary":"","title":"Openzfs"},{"content":"I have an old desktop PC running Fedora Workstation, which I use as a media server and secondary workstation. All the media files are stored on a OpenZFS mirror on two SSD\u0026rsquo;s. OpenZFS is a bit of a strange bird on Fedora, since Fedora doesn\u0026rsquo;t include support for it1. In my experience it works perfectly, but you have to take some precautions to avoid risking some nasty issues.\nMost importantly - I don\u0026rsquo;t use OpenZFS as my root file system in order to avoid getting into the situation where the system can\u0026rsquo;t boot due to being unable to mount it. I might not be able to mount the zpool, but I have a better chance of fixing the issue since I can still log in.\nOne of the unique, but not often discussed, features of Fedora is that it closely follows kernel releases (see the docs for details) even after a version of Fedora has been released. For most users that isn\u0026rsquo;t an issue, but it can be when depending on kernel modules which aren\u0026rsquo;t being updated at the same cadence as the kernel package - like OpenZFS. Meaning that if you aren\u0026rsquo;t careful you risk loosing access to your OpenZFS volumes after a kernel upgrade! So I\u0026rsquo;m usually a little hesitant to upgrade the minor version of the kernel, e.g. 6.7 to 6.8, until OpenZFS has released a version supporting it.\nFedora includes zfs-fuse which looks quite dead.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 March 2024","permalink":"/posts/2024/zfs-on-fedora/","section":"Posts","summary":"I have an old desktop PC running Fedora Workstation, which I use as a media server and secondary workstation.","title":"Running ZFS on Fedora"},{"content":"","date":null,"permalink":"/tags/zfs/","section":"Tags","summary":"","title":"Zfs"},{"content":"","date":null,"permalink":"/tags/backup/","section":"Tags","summary":"","title":"Backup"},{"content":"","date":null,"permalink":"/tags/borg/","section":"Tags","summary":"","title":"Borg"},{"content":"","date":null,"permalink":"/tags/borgbackup/","section":"Tags","summary":"","title":"Borgbackup"},{"content":"","date":null,"permalink":"/tags/borgbase/","section":"Tags","summary":"","title":"Borgbase"},{"content":"","date":null,"permalink":"/tags/disaster-recovery/","section":"Tags","summary":"","title":"Disaster Recovery"},{"content":"My recent post about replacing my backup solution with BorgBackup ended with a bit of a cliffhanger\u0026hellip; I still needed to try and restore some data from backup.\nI decided to test this by imagining the worst case scenario of my main computer, and all its data, being lost completely thus requiring me to restore data using only a fresh Linux machine and my password manager.\nFirst, I needed to get access to BorgBase again in order to configure access from the fresh Linux machine. Using the credentials stored in my password manager and my phone for 2FA I managed to log in to BorgBase. I then needed to generate a new SSH key, using ssh-keygen, and add the public key to BorgBase. During this I learned an important detail about BorgBase - the SSH key is only used to authenticate the machine to BorgBase and isn\u0026rsquo;t tied to the backup data itself, removing the need to backup the SSH key.\nBefore being able to use the key I just uploaded with BorgBase I needed to add it to the list of keys with access to a repo with the data I wanted to restore. This was easily done using the BorgBase UI.\nI chose to try two different methods of restoring data - using the BorgBackup CLI, and Vorta. Before we get to that a short note on Borg repositories and passphrases. The password of a repository is set when first creating the repository (using borg init) and is used to encrypt the repository. The passphrase has nothing to do with your BorgBase password and should be kept somewhere safe - I store it in a note in my password manager.\nBorg CLI #The borg(1) command is pretty straight-forward once you get the hang of it and its extensive man page has lots of details and examples. The website has a very nice quick start page outlining the process from start to finish.\nRestoring data to a new Fedora machine takes the following steps:\nInstall BorgBackup dnf install borgbackup Store the URL of the repo to restore in a variable, export BORG_REPO=ssh://.... BorgBase provides a handy link to copy the URL to the clipboard. borg will look for the repo URL in $BORG_REPO unless you provide it on the command line borg info will list summary information about the repo - useful to verify access borg list to view archives in a repo. Each archive points to a point in time when a backup was taken borg extract is used to extract data from an archive. To extract all the data in the archive wombat-2023-12-28-115914 to the current directory use the command borg extract ::wombat-2023-12-28-115914 borg extract has a number of useful options like --dry-run to simulate extracting data, --list to list the files while restoring, and --exclude to exclude files matching a certain pattern.\nVorta #While restoring files using the CLI was quite simple it was a bit more confusing to restore the same data using Vorta. Notably the distinction between adding a new or existing repository using the same button was a bit confusing, but otherwise the steps were quite similar to the CLI:\nInstall Vorta dnf install vorta and launch it Add a new repository using the plus button making sure to select Existing repository\u0026hellip; and inputting the repository URL and passphrase Click the Archives tab to browse the archives Select an archive and click Extract Afterthoughts #Restoring data was reasonably simple and quite snappy on my 1 Gbit/s internet connection, so I deemed the test a success and promptly signed up for the paid version of BorgBase to get space for all my data. I really like how BorgBase allowed you to send a donation to the BorgBackup project at the same time as paying their subscription fee making it very simple to donate to the project.\nThe test also made me aware of two more things to consider for my disaster recovery:\nI am nothing without my password manager, Bitwarden, and I ought to consider having a second copy of it I need my phone for 2FA. I currently use the app Authy for 2FA which can be restored from the cloud, but I need to look into what I need for doing that ","date":"6 January 2024","permalink":"/posts/2024/how-i-restore-backups/","section":"Posts","summary":"My recent post about replacing my backup solution with BorgBackup ended with a bit of a cliffhanger\u0026hellip; I still needed to try and restore some data from backup.","title":"How I Restore Backups"},{"content":"","date":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":"","date":null,"permalink":"/tags/restore/","section":"Tags","summary":"","title":"Restore"},{"content":"","date":null,"permalink":"/tags/vorta/","section":"Tags","summary":"","title":"Vorta"},{"content":"","date":null,"permalink":"/tags/2fa/","section":"Tags","summary":"","title":"2fa"},{"content":"","date":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"Git"},{"content":"SSH keys have, for a long time, been the preferred method of authentication when using Git with remote repositories. These days, with increased security awareness, many organisations are requiring some variant of multi-factor authentication for all services - Git included.\nGitHub has announced1 that they are taking it one step further, and will require that all users contributing code enable one or more forms of two-factor authentication (2FA) by the end of 2023.\nThat leaves Git users with a problem as SSH keys can\u0026rsquo;t be combined with 2FA. Instead users can create a personal access token and input it as their password, but that is cumbersome and requires managing personal access tokens in a secure way.\nThankfully there are several solutions to solve this issue, without compromising security 😀\ngit-credential-oauth #One option on Linux is git-credential-oauth which is a credential helper for Git which uses OAuth to securely authenticate to a bunch of popular Git hosts. It requires very little setup to get running, and once done it will open your preferred browser every time Git needs to authenticate with a remote repository. The retrieved token is cached automatically so it won\u0026rsquo;t open a browser window all the time.\nThe motivation section of the git-credential-oauth README2 file provides a nice comparison between it and other solutions like SSH and personal access tokens.\nInstalling and configuring git-credential-oauth is easy. The steps below are based on Fedora, but should be similar on any other Linux distribution.\nInstall the package using dnf install git-credential-oauth Run git credential-oauth configure to configure Git Step 2 will update your ~/.gitconfig to include the lines below - you could also add them yourself if you don\u0026rsquo;t want others meddling with your Git configuration.\n[credential] helper = cache --timeout 7200 helper = oauth Not all systems have have a browser though, so git-credential-oath also supports3 the OAuth device flow4. I have yet to try it out, but setup looks very simple.\nGit Credential Manager Core #Another solution comes from Microsoft and is called Git Credential Manager Core5 - replacing a previous tool called Git Credential Manager for Windows. Git Credential Manager Core is written in .Net and supposedly runs fine on Linux, but it only available a .deb package or as a tarball and isn\u0026rsquo;t available in the Fedora repositories.\nGit Credential Manager Core does have extra support for Azure so it might be worth a look if that is your choice of cloud solution.\nI have used Git Credential Manager Core on Windows where it works very well and even integrates into WSL2. I remember struggling a bit setting it up with WSL2, but got it working in the end. Can\u0026rsquo;t remember what I had to do and the machine has been returned to the client, but I hope that documentation has been updated should I ever need it again 😀\nRaising the bar for software security: next steps for GitHub.com 2FA\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/hickford/git-credential-oauth#motivation\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/hickford/git-credential-oauth#browserless-systems\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nRFC-8628-OAuth 2.0 Device Authorization Grant\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nGit Credential Manager Core\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"8 December 2023","permalink":"/posts/2023/git-with-2fa-on-linux/","section":"Posts","summary":"SSH keys have, for a long time, been the preferred method of authentication when using Git with remote repositories.","title":"Git With 2FA on Linux"},{"content":"","date":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github"},{"content":"","date":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows"},{"content":"","date":null,"permalink":"/tags/wsl2/","section":"Tags","summary":"","title":"Wsl2"},{"content":"","date":null,"permalink":"/tags/debian/","section":"Tags","summary":"","title":"Debian"},{"content":"For the last six years I have been using a backup product called SpiderOak One which puts a large focus on privacy - it even got a recommendation from Edward Snowden. SpiderOak has since shifted their focus away from backup, and their closed-source client hasn\u0026rsquo;t seen an update since 2019. They haven\u0026rsquo;t discontinued the product, but it obviously doesn\u0026rsquo;t have their focus any longer.\nFinding a replacement has been on my todo list for a while, and I have looked at various tools but never gotten further than looking. Listening to episode 9 of the Linux Matters podcast titled Big Backup Bonanza gave me some much needed motivation to go further.\nRequirements #While I hadn\u0026rsquo;t tried out any new backup tools, I had made a list of loose requirements which my new backup solution should satisfy.\nMust have an open-source Linux client. Preferably packaged in the official repos of Fedora and Debian. Backups must be stored off-site, on a service I don\u0026rsquo;t have to run since I\u0026rsquo;d prefer to not be a sysadmin in my spare time. Preferably multiple providers of off-site locations to choose from. Data should be stored in the EU. Not out of paranoia, but because I like not having everything in the US. My wife runs Windows on her laptop and stores all her data in the cloud, and since I only have Linux machines support for other platforms isn\u0026rsquo;t a requirement.\nBorg Backup #One of the tools mentioned by the Linux Matters hosts was Borg Backup, which I had also seen positive mentions of in other places.\nBorg is released under the BSD license, and packages are available in the official repos of both Fedora and Debian. There are several service providers which support Borg, including well-known companies like Hetzner and rsync.net. I ended up creating a trial account with BorgBase which operates out of Malta and allows you to choose between storing your data in the EU or the United States. The same people who are behind BorgBase also behind the GUI client Vorta which, again, is available in both Fedora and Debian.\nGetting it all setup with Vorta and a trial account on BorgBase took around 30 minutes before I was ready to begin adding folders to Vorta\u0026rsquo;s list of sources to back up. Vorta offers lots of options to schedule backups, but for now I have mostly stuck with the defaults. Only settings I made sure to check were to start Vorta automatically on login and to run missed backups on startup as I don\u0026rsquo;t leave my laptop running 24/7.\nBorgBase provides a monitoring feature where it alerts you if a repository hasn\u0026rsquo;t seen a new backup within a certain period. This is a simple solution to the problem of alerting you if your backup program for some reason is failing to run.\nNext steps\u0026hellip; #There is nothing more useless than an untested backup so that is an obvious next step. Vorta\u0026rsquo;s documentation includes a nice guide on how to verify your backup which I will also need to take a closer look at. For now I have backed up about 7,5GB of files to BorgBase, but have yet to try restoring them on another system.\nI would also like to take a look at Borgmatic which looks like a very simple method of running Borg backups from the command-line. Could be useful on a server where Vorta wouldn\u0026rsquo;t be of much help.\n","date":"6 November 2023","permalink":"/posts/2023/how-i-do-backups/","section":"Posts","summary":"For the last six years I have been using a backup product called SpiderOak One which puts a large focus on privacy - it even got a recommendation from Edward Snowden.","title":"How I Do Backups"},{"content":"","date":null,"permalink":"/tags/spideroak/","section":"Tags","summary":"","title":"Spideroak"},{"content":"","date":null,"permalink":"/tags/authselect/","section":"Tags","summary":"","title":"Authselect"},{"content":"Gnome Boxes and Virtual Machine Manager are great tools for running virtual machines on Linux. Both are using the libvirt API to run and manage the virtual machines. This doesn\u0026rsquo;t just make the two tools interoperable, but also opens up for working with the entire ecosystem of utilities around libvirt and libguestfs allowing for endless automation of virtual machines.\nA common use-case for me is to run headless VMs and then use SSH to connect to them. Out of the box on Fedora I have to use the IP address of the VM to connect to it, which is a hassle. libvirt comes with the libvirt-nss module which plugs in to the hosts name resolution, and extends it to dynamically resolve hostnames and guest names. It even works inside of your guest VMs allowing them to lookup other guests without using IP addresses.\nInstallation is really simple, but the configuration is a little different on Fedora which uses authselect(8) to manage /etc/nsswitch.conf and related files. Below is a simple how-to describing how I got it working on Fedora 38.\nHow-to # Install the module: dnf install libvirt-nss Enable the feature in authselect: $ authselect enable-feature with-libvirt Make sure that SSSD service is configured and enabled. See SSSD documentation for more information. - with-libvirt is selected, make sure that the libvirt NSS plugins are installed ","date":"22 September 2023","permalink":"/posts/2023/libvirt-nss/","section":"Posts","summary":"Gnome Boxes and Virtual Machine Manager are great tools for running virtual machines on Linux.","title":"Configuring libvirt guest lookup on Fedora"},{"content":"","date":null,"permalink":"/tags/libvirt/","section":"Tags","summary":"","title":"Libvirt"},{"content":"","date":null,"permalink":"/tags/blogging/","section":"Tags","summary":"","title":"Blogging"},{"content":"It\u0026rsquo;s 2023 and I have started a blog!\nI have previously made several half-hearted attempts, but none that really took of (as in me actually posting something).\nWhy now? #Writing has always been something I enjoyed doing, but since I left school most of my writing has been work related. Some of my writing here is probably going to resemble work quite a lot, but lets see where it goes. At least I\u0026rsquo;m not trying to sell anything to anyone here 😀\nI would also like to work on my writing - not only to improve my communication, but also to improve my English. Although I have lived in both Ireland and the United Kingdom, and speak English on a daily basis I still feel there is room for improvement.\nWho is the reader? #Myself mostly, but I wouldn\u0026rsquo;t mind if others would read my posts. Maybe even find a morsel or two of useful information.\nInspiration #Two people who have inspired me to begin blogging are Julia Evans and Major Hayden. Both make some really good points, and Major really puts it into plain language:\nWrite for you – not for anyone else.\nThere you have it, lets see how long it lasts 😀\n","date":"6 September 2023","permalink":"/posts/2023/first-post/","section":"Posts","summary":"My first post with an explanation to why I begin blogging in 2023.","title":"First Post"},{"content":"","date":null,"permalink":"/tags/introduction/","section":"Tags","summary":"","title":"Introduction"},{"content":"","date":null,"permalink":"/tags/writing/","section":"Tags","summary":"","title":"Writing"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]